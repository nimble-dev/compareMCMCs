% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compareMCMCs.R
\name{compareMCMCs}
\alias{compareMCMCs}
\title{run a set of MCMCs for performance comparison}
\usage{
compareMCMCs(modelInfo, MCMCcontrol, MCMCs = "nimble",
  monitors = character(), nimbleMCMCdefs = list(),
  externalMCMCinfo = list(), metrics = c("mean", "median", "sd",
  "CI95_low", "CI95_upp", "efficiency_coda"), conversions = list(),
  seed = NULL, needRmodel, verbose = TRUE)
}
\arguments{
\item{modelInfo}{A list of nimble model-specification information,
which may be relevant for JAGS, WinBUGS and/or OpenBUGS as
well. \code{modelInfo} named elements can include `code` (model
code as returned from `nimbleCode`), `data` (a list with data),
`constants` (a list with data and/or constants), and `inits` (a
list of initial values).  See `nimbleModel` in package nimble
for for information on these arguments.  For JAGS, WinBUGS and
OpenBUGS, many models can also be run from the same
specification since they use nearly the same model language.
For a different MCMC engine, see argument
\code{externalMCMCinfo}.}

\item{MCMCcontrol}{A list with fields `niter` (number of
iterations), `thin` (thinning interval), and `burnin` (number
of iterations to discard from the beginning of the MCMC
sample).}

\item{MCMCs}{A character vector of MCMC cases to run.  This can
include "nimble" (default nimble samplers), "jags", "WinBUGS",
"OpenBUGS", "Stan", one of several nimble special cases
(see details below), custom nimble
sampler configurations provided via argument
\code{nimbleMCMCdefs}, and external MCMCs registered via
\code{\link{registerMCMCengine}}.}

\item{monitors}{A vector of names of parameters to record in MCMC samples.}

\item{nimbleMCMCdefs}{A list of information for custom sampler configurations in nimble.  See Details below.}

\item{externalMCMCinfo}{A list of information, named by external MCMC engine names, to provided to each engine.  If there is an external MCMC engine named "myMCMC", then a list element "myMCMC" of \code{externalMCMCinfo} will be passed to the engine as its \code{MCMCinfo} argument.}

\item{metrics}{Either a character vector of registered metric names
to apply to each sample, or a list of elements with either
metric names or metric functions to apply to each sample.  See
\code{addMetrics} for more information.  A useful set of
default metrics is provided.}

\item{seed}{a numeric value passed to `set.seed` to set the
random-number generator seed before calling each MCMC engine.
If NULL, no seed is set.}
}
\value{
A list of `MCMCresult` objects.
}
\description{
run one or more MCMC engines for one model specification, with 
timing and performance metrics calculated.
}
\details{
The special cases provided for the `MCMCs` argument
    include: "nimble_noConj", using adaptive random-walk
    Metropolis-Hastings (ARWMH) samplers in place of Gibbs
    (conjugate) samplers; "nimble_RW", using all ARWMH samplers;
    "nimble_slice", using all slice samplers; and "autoBlock",
    using nimble's automatic blocking algorithm.
}
